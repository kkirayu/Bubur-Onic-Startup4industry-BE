<?php

namespace App\Services\PotonganKaryawan;

use Illuminate\Http\Request;
use App\Models\ProfilPegawai;
use Laravolt\Crud\CrudService;
use App\Models\PotonganKaryawan;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\ValidationException;
use Illuminate\Pagination\LengthAwarePaginator;
use Laravolt\Crud\Contracts\StoreRequestContract;

class PotonganKaryawanService extends CrudService
{
    public function beforeCreateHook(FormRequest|StoreRequestContract $requestContract)
    {
        if(!ProfilPegawai::where("id" , $requestContract->id_profile_pegawai)->first()){
            throw ValidationException::withMessages([
                'id_profile_pegawai' => 'Profile Pegawai Tidak Ditemukan',
            ]);
        }
        return parent::beforeCreateHook($requestContract); // TODO: Change the autogenerated stub
    }

    function updateStatus() {
        $request = request();
        $request->validate([
            'status' => 'required|in:DIAJUKAN,DIBATALKAN',
        ]);

        $potongan = PotonganKaryawan::find($request->id);

        if (!$potongan) {
            throw ValidationException::withMessages(['id' => 'Potongan Tidak Ditemukan']);
        }

        if ($potongan->status == 'BARU' && $request->status == 'DIAJUKAN') {
            $potongan->status = 'DIAJUKAN';
        }else if ($potongan->status == 'BARU' && $request->status == 'DIBATALKAN') {
            $potongan->status = 'DIBATALKAN';
        }else {
            throw ValidationException::withMessages(['status' => 'Status Potongan Tidak Valid']);
        }

        $potongan->save();

        return $potongan;
    }
}
